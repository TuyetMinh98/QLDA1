using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace Public
{
    /// <summary>
    /// Controller class for TblVaiTro
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TblVaiTroController
    {
        // Preload our schema..
        TblVaiTro thisSchemaLoad = new TblVaiTro();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TblVaiTroCollection FetchAll()
        {
            TblVaiTroCollection coll = new TblVaiTroCollection();
            Query qry = new Query(TblVaiTro.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TblVaiTroCollection FetchByID(object Id)
        {
            TblVaiTroCollection coll = new TblVaiTroCollection().Where("Id", Id).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TblVaiTroCollection FetchByQuery(Query qry)
        {
            TblVaiTroCollection coll = new TblVaiTroCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Id)
        {
            return (TblVaiTro.Delete(Id) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Id)
        {
            return (TblVaiTro.Destroy(Id) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(Guid Id,string VaiTro,bool QuyenThem,bool QuyenSua,bool QuyenXoa,DateTime NgayTao,string NguoiTao,DateTime? NgayCapNhat,string NguoiCapNhat,bool TrangThai)
	    {
		    TblVaiTro item = new TblVaiTro();
		    
            item.Id = Id;
            
            item.VaiTro = VaiTro;
            
            item.QuyenThem = QuyenThem;
            
            item.QuyenSua = QuyenSua;
            
            item.QuyenXoa = QuyenXoa;
            
            item.NgayTao = NgayTao;
            
            item.NguoiTao = NguoiTao;
            
            item.NgayCapNhat = NgayCapNhat;
            
            item.NguoiCapNhat = NguoiCapNhat;
            
            item.TrangThai = TrangThai;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(Guid Id,string VaiTro,bool QuyenThem,bool QuyenSua,bool QuyenXoa,DateTime NgayTao,string NguoiTao,DateTime? NgayCapNhat,string NguoiCapNhat,bool TrangThai)
	    {
		    TblVaiTro item = new TblVaiTro();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.Id = Id;
				
			item.VaiTro = VaiTro;
				
			item.QuyenThem = QuyenThem;
				
			item.QuyenSua = QuyenSua;
				
			item.QuyenXoa = QuyenXoa;
				
			item.NgayTao = NgayTao;
				
			item.NguoiTao = NguoiTao;
				
			item.NgayCapNhat = NgayCapNhat;
				
			item.NguoiCapNhat = NguoiCapNhat;
				
			item.TrangThai = TrangThai;
				
	        item.Save(UserName);
	    }
    }
}
